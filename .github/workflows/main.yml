name: PR Workflow

on:
  pull_request:
    branches:
      - 'main'
      - 'master'

jobs:
  wait-for-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Check Previous PR Workflow Status
        id: check-status
        run: |
          while true; do
            api_response=$(curl -s "https://api.github.com/repos/${{ github.repository }}/actions/runs?event=pull_request&status=in_progress,queued&per_page=1")
            total_count=$(echo "$api_response" | jq -r '.total_count')
            echo "Total Count of Previous PR Workflows: $total_count"

            if [ "$total_count" -eq 0 ]; then
              echo "No previous PR workflows found in progress or queued."
              exit 0
            fi

            previous_run_url=$(echo "$api_response" | jq -r '.workflow_runs[0].html_url')
            echo "Previous PR Workflow URL: $previous_run_url"

            status=$(curl -s -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" "$previous_run_url" | jq -r '.status')
            if [ "$status" == "completed" ]; then
              echo "Previous PR workflow has completed."
              exit 0
            elif [ "$status" == "in_progress" ] || [ "$status" == "queued" ]; then
              echo "Previous PR workflow is still in progress or queued. Waiting for 30 seconds..."
              sleep 30
            else
              echo "Previous PR workflow has an unexpected status: $status. Exiting..."
              exit 1
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [wait-for-previous]
    steps:
      - uses: mdecoleman/pr-branch-name@1.2.0
        id: vars
        with:
          repo-token: ${{ secrets.PAT_TOKEN }}

      - run: echo ${{ steps.vars.outputs.branch }}

      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Executing Regression Tests for LIVE ENV
        uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: dubeywati
          repo: test
          github_token: ${{ secrets.PAT_TOKEN }}
          github_user: dubeywati
          workflow_file_name: main.yml
          ref: feature
          wait_interval: 10
          client_payload: '{"branch_name":"${{ steps.vars.outputs.branch }}","PR_ISSUE_NUMBER": "${{ github.event.pull_request.number }}", "PR_REPO_OWNER": "${{ github.repository_owner }}", "PR_REPO_NAME": "${{  github.event.repository.name }}"}'
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
          comment_downstream_url: ${{ github.event.pull_request.comments_url }}
